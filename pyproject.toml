[tool.poetry]
name = "uvicorn-poetry"
version = "3.3.0"
description = "Docker image with Uvicorn ASGI server for running Python web applications on Kubernetes. Uses Poetry for managing dependencies and setting up a virtual environment."
authors = ["Max Pfeiffer <max@maxpfeiffer.ch>"]
license = "MIT"

[tool.poetry.dependencies]
python = "3.11.*"
click = "8.1.7"
python-on-whales = "0.70.1"

[tool.poetry.dev-dependencies]
pytest = "8.2.0"
pytest-cov = "5.0.0"
pytest-dotenv = "0.5.2"
coverage = "7.4.4"
requests = "2.31.0"
pre-commit = "3.6.2"
semver = "3.0.2"
testcontainers = "4.1.1"
bcrypt = "4.1.2"
docker-image-py = "0.1.12"
furl = "2.1.3"

[tool.ruff]
exclude = [".venv"]

[tool.ruff.lint]
select = [
    "F", # Pyflakes
    "E", # pycodestyle
    "W", # pycodestyle
    "I", # isort
    "D",   # pydocstyle
    "UP",  # pyupgrade
    "ASYNC", # flake8-async
    "RUF",  # Ruff-specific rules
]

[tool.ruff.lint.pydocstyle]
convention = "pep257"

# https://docs.pytest.org/en/latest/reference/customize.html
[tool.pytest.ini_options]
testpaths = [
    "tests",
]

# https://black.readthedocs.io/en/stable/usage_and_configuration/the_basics.html#configuration-via-a-file
[tool.black]
line-length = 80
target-version = ["py39"]

[tool.pylint.main]
errors-only = true
recursive = "y"
ignore-paths = "^examples/.*$"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
